Node
  - @ip
  - @id
  - ..
  - RoutingTable
  - HashTable

  - join_network
    - create an id if there isn't one
    - get TBDNetwork::SUPER_NODES (???)
    - pick one of the super nodes as the bootstrap node
    - ping the bootstrap node
    - RPC "iterative_find_node" on the bootstrap node, passing its own contact

	- iterative_find_node
		- call "find_node" on itself
			- returns k contacts
		- find the closest of the k contacts to the id
			- if the closest is itself?
				- return itself
			- else
        - ping the closest node
				- RPC "find_node" on that closest node
  - iterative_find_value
		- input: resource_hash
		- call its own "find_value"
			- returns: k contacts
		- find the closest of the k contacts to the value
			- if the closest itself?
				- return itself
			- else
        - ping that node
				- RPC "find_value" on that node
  - iterative_store
    - compute the hash of the file content(or passed in)
		- call find_node with the hash above
			- return k contacts
		- find the closest of the k contacts to the value
			- if the closest itself?
				- call "store" on self, the originating node as the contact
			- else
        - ping that node
				- RPC "store" on that node, the originating node as the contact, passing along the content hash
	- store
		- receives a contact (the node that originated "iterative_store"), an hash (hash of the file content), the data (a URL to get it)
    - insert k/v into the the current node's HashTable
	- find_value
		- takes a hash
		- same as "find_node"
	- find_node
		- takes a hash
		- return k contacts that's closest to the hash
	- ping
		- takes a contact
		- returns a boolean (alive or not)
		- if true
			update / insert the contact into its routing table
		-	 else
			evict the contact from its routing table
	- receive_ping
		- takes a contact
		- upsert the contact into its routing table

- replication
- error paths (nodes down)
- allow setting alpha
- ping can be a random true/false (90% true / 10% false)

RoutingTable
  - node_id
  - buckets
    - bucket:
      - [contacts]


contact -> node
